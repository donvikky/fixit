# This workflow will build a package using Maven and then publish it to dockerhub and then to a remote repository
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path

name: Build and push docker image to remote server

on:
  push:
    branches:
      - develop

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
    - name: Set up application properties
      run: echo "${{ secrets.APPLICATION_TEST_PROPERTIES }}" > src/main/resources/application.properties

    - name: Build and Push Docker Image
      env:
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      run: |
        echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
        ./mvnw spring-boot:build-image -Dspring-boot.build-image.imageName=vokrobodo/fixit:dev
        docker push vokrobodo/fixit:dev
    - name: Deploy Docker container
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.REMOTE_HOST }}
        username: ${{ secrets.REMOTE_USERNAME }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        port: ${{ secrets.REMOTE_PORT }}
        script: |
          docker stop vokrobodo/fixit:dev || true
          docker rm vokrobodo/fixit:dev || true
          docker pull vokrobodo/fixit:dev
          docker run -p 8081:8081 -e SPRING_DATASOURCE_URL=jdbc:mysql://host.docker.internal:3306/fixit vokrobodo/fixit:dev
